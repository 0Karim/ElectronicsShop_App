@using ElectronicShop.Domain.Enums;
@using ElectronicShop.Infrastructure.Helpers;

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="page-header">
    <div>
        <h1 class="page-title">Products</h1>
        <ol class="breadcrumb">
            <li class="breadcrumb-item active" aria-current="page">Product Search</li>
        </ol>
    </div>
    @*<div class="@(ViewBag.LangDirection==Keys.LTR ?"ml-auto":"mr-auto") pageheader-btn">*@
    <div class="ml-auto pageheader-btn">
        <a asp-action="Add" id="btnAdd" class="btn btn-success btn-icon text-white mr-2">
            <span>
                <i class="fe fe-plus"></i>
            </span> Add Product
        </a>
    </div>
</div>

<!-- PAGE-HEADER END -->
<div class="card">
    <div class="card-header">
        <h3 class="mb-0 card-title">Search Criteria</h3>
    </div>
    <div class="card-body">
        <div class="row">
            <div class="col-lg-6 col-md-12">
                <div class="form-group">
                    <label class="form-label" for="ddlCountryName">Category</label>
                    <select id="ddlCategoryName"
                            class="form-control select2-show-search"
                            asp-items="ViewBag.ListofCategories">
                    </select>
                </div>
            </div>
        </div>
    </div>
    <div class="card-footer">
        <div class="btn-list text-left">
            <a href="" id="btnSearch" class="btn btn-primary">Search</a>
        </div>
    </div>
</div>


<div class="card">
    <div class="card-header">
        <h3 class="card-title">Search Result</h3>
    </div>
    <div class="card-body">
        <div class="table-responsive">
            <table id="tblProducts" class="table table-striped table-bordered text-nowrap w-100">
                <thead>
                    <tr>
                        <th>Product Name</th>
                        <th>Description</th>
                        <th>Category</th>
                        <th>Price</th>
                        <th></th>
                    </tr>
                </thead>
            </table>
        </div>
    </div>
    <!-- TABLE WRAPPER -->
</div>
<!-- SECTION WRAPPER -->


@section Scripts
{
    <script type="text/javascript">
        $(function () {
            initTable();
        });

        $('#btnSearch').click(function (event) {
            event.preventDefault();
            ReloadWithParams();
        });

        function ReloadWithParams() {
            var dt = initTable();
            dt.ajax.url("@Url.Action("GetProducts")?&categoryId="+ $('#ddlCountryName').val()).load();
        }

        function initTable() {
            var dataTableLocalization = " /lib/DataTableLocalization/Datatable_English_Json.json";
            $.fn.dataTable.ext.errMode = function(settings, helpPage, message) {
                SetAlertMessage("Error Display Data", "@AlertType.Info.ToString()");
            };


            var dt = $('#tblProducts').DataTable({
                "pageLength": @Constants.PageSize ,
                "retrieve": true,
                "processing": true,
                "searching": false,
                "serverSide": true,
                "ajax": {
                    url: "@Url.Action("GetProducts")",
                    type: "POST",
                    contentType: "application/json",
                    dataType: "json",
                    data: function(d) {
                        return JSON.stringify(d);
                    }
                },
                "columnDefs": [
                    {
                        "targets": 4,
                        "data": "id",
                        "render": function (data, type, row, meta) {
                            debugger;
                            var status = row["status"];
                            var htmlStr='<a  class="btn btn-sm btn-primary" href="' +
                            "@Url.Action("Edit")" +
                                '/' +
                                data +
                                '"><i class="fa fa-edit"></i>Edit</a>       ';

                            htmlStr = htmlStr+
                                    '<a class="btn btn-sm btn-danger" href="#" onclick="return ShowConfirmation(' +
                                    data +
                                    ',1)"><i class="fa fa-trash"></i>Delete</a>';

                            return htmlStr;
                        }
                    }
                ],
                "columns": [
                    { "data": "nameEn" },
                    { "data": "description" },
                    { "data": "categoryNameEn" },
                    { "data": "price" }
                ],
                language:
                {
                    "url": dataTableLocalization
                }
            });

            return dt;
        }

        function ShowConfirmation(id,isDelete) {

            swal({
                    title: "Confirmation",
                    text: isDelete? "Delete Product":"Active Product",
                    type: "warning",
                    showCancelButton: true,
                    //confirmButtonColor: "#DD6B55",
                    confirmButtonText: "Yes",
                    cancelButtonText: "No",
                    closeOnConfirm: false,
                    showLoaderOnConfirm: true
                },
                function () {
                        var jsonData = {
                            id: id,
                            isDeactivate: (isDelete?'1':'0')
                        }
                        $.ajax({
                            url: '@Url.Action("SetProductStatus")' +'?productId='+id,
                            type: 'POST',
                            dataType: 'json',
                            data: JSON.stringify(jsonData),
                            contentType: 'application/json; charset=utf-8"',
                            success: function (data) {
                                if (data.operationStatus == "1") {
                                    ReloadWithParams();
                                    swal("", data.message, "success");
                                } else {
                                    swal("", data.message, "warning");
                                }
                            },
                            error: function (jqXhr, textStatus, errorMessage) {
                                HandleAjaxErrorSwal(jqXhr,
                                    "AjaxNotAuthenticated",
                                    "AjaxNotAuthorized",
                                    "GeneralAjaxError",
                                    "@AlertType.Warning.ToString().ToLower()");
                            }
                        });
                }
            );

            return false;
        }
    </script>
}